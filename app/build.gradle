apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.styudint.nepyatnashki"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 2
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            if (System.env.SIGN_APP != null) {
                storeFile file(System.env.RELEASE_SIGNING_KEY_FILE)
                storePassword System.env.RELEASE_SIGN_PASSWORD
                keyAlias System.env.RELEASE_SIGN_KEY_ALIAS
                keyPassword System.env.RELEASE_SIGN_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (System.env.SIGN_APP != null) {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':common')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "com.android.support:support-core-utils:28.0.0"

    implementation 'com.android.support:design:28.0.0'

    def room_version = "2.2.0-alpha01"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Dagger
    implementation 'com.google.dagger:dagger:2.21'
    kapt 'com.google.dagger:dagger-android-processor:2.21'
    kapt 'com.google.dagger:dagger-compiler:2.21'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-RC'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0-RC2'

    // ViewModel
    def lifecycle_version = "2.0.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    implementation 'com.google.firebase:firebase-core:17.0.1'
    implementation 'com.google.firebase:firebase-auth:18.1.0'
}

repositories {
    mavenCentral()
}

apply plugin: 'com.google.gms.google-services'

task googleServicesJsonResolver {
    def googleServicesJsonFile = 'app/google-services.json'
    def jsonFile = new File(googleServicesJsonFile)
    if (jsonFile.exists()) {
        println("google-services.json file is FOUND")
    } else {
        println("google-services.json file is NOT FOUND")
        if (System.env.GOOGLE_SERVICES_JSON_FILE_PATH == null)
            throw IllegalStateException("GOOGLE_SERVICES_JSON_FILE_PATH is not set cannot proceed copy task")
        copy {
            from System.env.GOOGLE_SERVICES_JSON_FILE_PATH
            into './'
        }
        println("LOADED")
    }
}